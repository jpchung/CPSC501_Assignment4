/**
 * CPSC 501 Assignment 4 - Optimizing Program Performance
 * Regression Testing program:
 * This program takes command-line for names of output WAV files 
 * generated by Baseline program and FFT algorithm optimized program,
 * and compares the header fields to see if the two files match
 * 
 * Created by Johnny Chung
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <fstream>
#include <iostream>
#include "WavFile.h"

using namespace std;

/*Function Declarations */
int checkExtension(char* fileName);
int setExtensionFlag(int* fileExtensions);


int main(int argc, char* argv[]){
    char* outputFileBase;
    char* outputFileFFT;

    if(argc <= 2){
        printf("Usage: ./regressionTest <outputFileBase.wav> <outputFileFFT.wav>\n");
        return EXIT_FAILURE;
    }
    else{

        return EXIT_SUCCESS;
    }
}

/** 
 * Function: checkExtension
 * Description: check file name contains the .wav extension
 * Parameters:
 *          char* fileName - file name from command-line arg
 */
int checkExtension(char* fileName){
    
    printf("Checking file extension for %s...", fileName);
    const char* fileExtension = strrchr(fileName, '.');
    
    if(!fileExtension){
        //no file extension
        printf("No file extension found!\n");
        return EXIT_FAILURE;
    }
    else if((strcmp(fileExtension, ".wav")) != 0){
        //wrong file extension
        printf("Wrong file extension found!\n");    
        return EXIT_FAILURE;
    }
    else {
        printf("correct file extension\n");
        return EXIT_SUCCESS;
    }
       
}

/**
 * Function: setExtensionFlag
 * Description: set flag in main for valid file extensions for command-line args
 * Parameters:
 *          int* fileExtensions - pointer to list of file extension flags
 */
int setExtensionFlag(int* fileExtensions){
    int flag = 0;  
    for(int i = 0; i < sizeof(fileExtensions); i++){
        if(fileExtensions[i] == EXIT_FAILURE)
            flag = 1;
    }

    return flag;
}